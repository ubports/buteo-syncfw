/*
 * This file is part of buteo-syncfw package
 *
 * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * Contact: Sateesh Kavuri <sateesh.kavuri@nokia.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 *
 */
/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a SyncBackupAdaptor -c SyncBackupAdaptor com.nokia.syncbackup.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SYNCBACKUPADAPTOR_H_1277973475
#define SYNCBACKUPADAPTOR_H_1277973475

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

namespace Buteo {

/*!
 * \brief Adaptor class for interface com.nokia.backupclient
 */
class SyncBackupAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.nokia.backupclient")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.nokia.backupclient\">\n"
"    <signal name=\"backupDone\"/>\n"
"    <signal name=\"backupInProgress\"/>\n"
"    <signal name=\"restoreDone\"/>\n"
"    <signal name=\"restoreInProgress\"/>\n"
"    <method name=\"backupStarts\">\n"
"      <arg direction=\"out\" type=\"y\"/>\n"
"    </method>\n"
"    <method name=\"backupFinished\">\n"
"      <arg direction=\"out\" type=\"y\"/>\n"
"    </method>\n"
"    <method name=\"restoreStarts\">\n"
"      <arg direction=\"out\" type=\"y\"/>\n"
"    </method>\n"
"    <method name=\"restoreFinished\">\n"
"      <arg direction=\"out\" type=\"y\"/>\n"
"    </method>\n"
"    <method name=\"getBackUpRestoreState\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"  </interface>\n"
        "");
public:

    //! \see SyncBackup::SyncBackup()
    SyncBackupAdaptor(QObject *parent);

    //! \see ~SyncBackup::SyncBackup()
    virtual ~SyncBackupAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS

	//! \see ~SyncBackup::backupFinished()
    uchar backupFinished(const QDBusMessage &message);

	//! \see ~SyncBackup::backupStarts()
    uchar backupStarts(const QDBusMessage &message);

    //! \see ~SyncBackup::getBackUpRestoreState()
    bool getBackUpRestoreState();

    //! \see ~SyncBackup::restoreFinished
    uchar restoreFinished(const QDBusMessage &message);

    //! \see ~SyncBackup::restoreStarts
    uchar restoreStarts(const QDBusMessage &message);

Q_SIGNALS: // SIGNALS

	//! \see ~SyncBackup::backupDone
    void backupDone();

    //! \see ~SyncBackup::backupInProgress
    void backupInProgress();

    //! \see ~SyncBackup::restoreDone
    void restoreDone();

    //! \see ~SyncBackup::restoreInProgress
    void restoreInProgress();
};

}
#endif
